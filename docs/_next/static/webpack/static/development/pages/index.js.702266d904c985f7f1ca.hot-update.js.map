{"version":3,"file":"static/webpack/static/development/pages/index.js.702266d904c985f7f1ca.hot-update.js","sources":["webpack:///./pages/Intro.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Viewport from '../tools/Viewport';\r\n\r\nconst ProfilePicture = (props) => {\r\n    const canvasHeight = props.height / 1.5;\r\n    const canvasMargin = canvasHeight * 0.1;\r\n    const canvasRadius = canvasHeight / 2;\r\n    const imageAdapter = { width: (canvasHeight - canvasMargin) + \"px\", \r\n                            height: (canvasHeight - canvasMargin) + \"px\", \r\n                            marginTop: canvasMargin + \"px\" };\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById('circleBG');\r\n        const context = canvas.getContext('2d');\r\n        context.beginPath();\r\n        context.arc(\r\n            canvasRadius + (canvasMargin), \r\n            canvasRadius + (canvasMargin / 2), \r\n            canvasRadius, \r\n            0, 2 * Math.PI);\r\n        // context.fillStyle = 'rgb(68, 71, 90)';\r\n        context.fillStyle = 'rgb(255, 184, 108)';\r\n        context.fill();\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row justify-content-end\">\r\n            <div>\r\n                <div className=\"intro-canvas\">\r\n                    <div className=\"canvas-panel\">\r\n                        <div className=\"relative-panel\">\r\n                            <canvas id=\"circleBG\" height={canvasHeight + canvasMargin} width={canvasHeight + canvasMargin} />\r\n                            <img src=\"/myself.jpg\" style={imageAdapter}/>\r\n                            {/* <img src=\"/blank.jpg\" style={imageAdapter}/> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AnimatedBackground = (props) => {\r\n    const canvasHeight = props.height;\r\n    const canvasWidth = props.width;\r\n    const drawLine = (context, startPointX, startPointY, endPointX, endPointY) => {\r\n        context.moveTo(startPointX, startPointY);\r\n        context.lineTo(endPointX, endPointY);\r\n        context.stroke();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"animatedBG\");\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.beginPath();\r\n        context.strokeStyle = 'rgba(68, 71, 90, 0.2)';\r\n        context.lineWidth = 3;\r\n        drawLine(context, 0, 0, canvasWidth, canvasHeight - 150);\r\n        drawLine(context, canvasWidth * 0.75, 0, canvasWidth / 2, canvasHeight);\r\n        drawLine(context, canvasWidth * 0.43, 0, canvasWidth * 0, canvasHeight * 0.85);\r\n        drawLine(context, canvasWidth * 0.08, 0, canvasWidth * 0.39, canvasHeight);\r\n        drawLine(context, canvasWidth, canvasHeight * 0.04, canvasWidth * 0.15, canvasHeight);\r\n        drawLine(context, 0, canvasHeight * 0.45, canvasWidth * 0.81, canvasHeight);\r\n        drawLine(context, canvasWidth * 0.51, 0, canvasWidth * 0.62, canvasHeight);\r\n    });\r\n\r\n    return (\r\n        < >\r\n            <canvas id=\"animatedBG\" height={canvasHeight - 50} width={canvasWidth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Intro = () => {\r\n    const { viewHeight, viewWidth } = Viewport();\r\n\r\n    const space = { height: (viewHeight - 50) + 'px'};\r\n    const backgroundSpace = { height: (viewHeight - 50) + 'px', backgroundColor: 'rgba(0,0,0,0.5)', width: '100%' };\r\n\r\n    return (\r\n        <div className=\"intro\" id=\"nav_home\">\r\n            <div className=\"intro-background\" style={backgroundSpace}>\r\n                <AnimatedBackground height={viewHeight} width={viewWidth} />\r\n            </div>\r\n            <div className=\"row align-items-center\" style={space}>\r\n                <div className=\"col-7\">\r\n                    <div className=\"intro-panel\">\r\n                        <p className=\"message\">Hello I'm</p>\r\n                        <p className=\"name\">Guillermo</p>\r\n                        <p className=\"name\">Magdaleno</p>\r\n                        <p className=\"title\">Software Developer</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <ProfilePicture height={viewHeight} width={viewWidth}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Intro;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}